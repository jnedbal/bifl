function drawHistograms
global param
global data
global figs

%% Each figure is assigned an index to be identified
figs.type.scatter = 6 : 9;
figs.type.decay = 10;
figs.type.phasor = 11;
figs.type.report = 12;

%% Gates are associated with each scatter plot
for i = figs.type.scatter
%     figs.gates(i).hRect = [];
%     figs.gates(i).hElli = [];
    figs.gates(i).nrRect = 0;
    figs.gates(i).nrElli = 0;
end
if isfield(figs.gates, 'hElli')
    figs.gates = rmfield(figs.gates, 'hElli');
end
if isfield(figs.gates, 'hRect')
    figs.gates = rmfield(figs.gates, 'hRect');
end


%% Check if it is a linux computer
if isequal(computer, 'GLNXA64') || isequal(computer, 'GLNX86')
    param.os = true;
else
    param.os = false;
end

%% Create a new figure
figs.hMainFig(2) = ...
    figure('position', [750 50 640 800], 'Color', [1 1 1], ...
           'Name', 'Burst Ensemble Properties', 'Toolbar', 'none', ...
           'Resize', 'off', 'CreateFcn', @openFigure, ...
           'NumberTitle', 'off', 'Pointer', 'watch');

set(gcf, 'Tag', param.fname)

%% Create invisible axis for title
axes('Units', 'pixels', 'Position', [72 785 506 19], 'Xlim', [0 1], ...
     'Ylim', [0 1], 'Box', 'off', 'Color', 'w', 'clipping', 'off', ...
     'Tag', 'Title Axis', 'YTick', [], 'XTick', [], 'XColor', 'w', ...
     'YColor', 'w');

txt = sprintf('Burst Ensemble Properties (%s)', ...
     regexprep([param.fname param.ext], '_', '\\_'));
figs.hTitle(2) = text(0.5, 0, txt, ...
     'HorizontalAlignment', 'center', 'VerticalAlignment', 'baseline', ...
     'FontName', 'FixedWidth', 'FontWeight', 'bold');


%% Draw all axes
pos = [ 72, 600, 130, 130; ...
       260, 600, 130, 130; ...
       448, 600, 130, 130; ...
        72, 355, 130, 130; ...
       260, 355, 318, 130; ...
        40,  65, 324, 189; ...
       365,  30, 213, 259];

figs.hAxes = [figs.hAxes, zeros(1, 7)];
figs.hFig = [figs.hFig, zeros(1, 7)];
figs.hChildern = [figs.hChildern, zeros(7, 7)];

% Titles for axes. The second line is number of spaces needed to center it
% in linux
figs.tits = horzcat(figs.tits, ...
    {{' Ph Count', 'vs. Duration'}, ...
     {'Mean Ph Frequency', 'vs. Duration'}, ...
     {'Mean Ph Frequency', 'vs. Ph Count'}, ...
     {{'Ph Freq 90%tile', 'vs. Ph Count'}, ...
      {'Ph Freq 90%tile', ...
       sprintf('%g MHz', mean(data.burst90percentile) * 1e-6)}}, ...
     'Normalized Fluorescence Decay', 'Phasor Plot'; ...
     0, 0, 0, 0, 16, 0});
figs.xlabs = horzcat(figs.xlabs, ...
    {'Burst Duration (ms)', 'Burst Duration (ms)', 'Burst Ph kCount', ...
    'Burst Ph kCount', 'Micro Time (counts)', ''; ...
    0, 0, 0, 0, 11, 0});
figs.ylabs = horzcat(figs.ylabs, ...
    {'Ph kCount', 'Mean Ph Freq (MHz)', 'Mean Ph Freq (MHz)', ...
    {'Ph Freq 90%tile (MHz)', 'Relative Frequency (A.U.)'}, ...
    'Ph Frequency', ''; ...
    0, 0, 0, 0, 6, 0});
in = [figs.type.scatter, figs.type.decay, ...
      figs.type.phasor, figs.type.report];
for i = in
    figs.hAxes(i) = axes('Units', 'Pixels', 'Tag', num2str(i), ...
                         'Position', pos(i - in(1) + 1, :)); ...
                         %#ok<LAXES>
end
for i = figs.type.scatter
    figs.hGaxes(i) = axes('Units', 'Pixels', 'Tag', num2str(i), ...
                       'Position', pos(i - in(1) + 1, :), ...
                       'color', 'none', 'Xlim', [0 1], 'Ylim', [0 1], ...
                       'XTick', [], 'YTick', [], ...
                       'ButtonDownFcn', @mouseclick_callback); %#ok<LAXES>
end

for i = 1 : 4
    drawScatter(i, figs.hAxes(figs.type.scatter(i)));
end

drawDecay(figs.hAxes(figs.type.decay));


drawPhasor(figs.hAxes(figs.type.phasor));

displayReport(figs.hAxes(figs.type.report));

for i = figs.type.scatter
    clearGates(i);
end
