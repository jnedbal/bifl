function exportICS(utimeHist, fname)
global data
global fifo

%% Generate histograms in ICS format
physDims.dimensions = [0.039062 0.296296 0.296296];
physDims.origin = [0 0 0];
physDims.dimensionUnits = {'ns', 'microns', 'microns'};
physDims.intensity = 1;
physDims.offset = 0;
physDims.intensityUnit = 'relative';
history = ...
    {'microscope name	Janssen Microscope', ...
     'metadata format ver	1.0', ...
     'microscope	Janssen', ...
     'manufacturer	Gray Institute', ...
     'microscope built on	$WCNOW$', ...
     'atd_microscopy ver	$WCREV$ $WCDATE$', ...
     'atd_hardware ver	$HARDWARE_REV$ $HARDWARE_DATE$', ...
     'atd_libraries ver	$LIBRARIES_REV$ $LIBRARIES_DATE$', ...
     'icsviewer ver	$ICSVIEWER_REV$ $ICSVIEWER_DATE$', ...
     'experimenter	HCS', ...
     'study	DefaultStudy', ...
     'experiment	DefaultExperiment', ...
     sprintf('creation date	%s', datestr(now, 'HH:MM:SS dd\\mm\\yy')), ...
     'type	FluorescenceLifetime', ...
     'labels	t x y', ...
     sprintf('dimensions	%g %g 256', data.square, data.square), ...
     'offsets	0 0 0', ...
     'units	s m m', ...
     sprintf('extents	1.000000e-008 %g %g', data.square, data.square)};

if ~isfield(fifo, 'rChan')
    fifo.rChan = unique(fifo.rout);
end

for i = 1 : numel(fifo.rChan)
    fn = sprintf('%s_Ch%d', fname, fifo.rChan(i));
    fprintf('Exporting ICS file %s.ics\n', fn);

    dipio_imagewriteics(...
        dip_image(squeeze(utimeHist(:, :, :, i)), 'uint16'), fn, ...
        'gray', physDims, history, 16, 2, 0)
end